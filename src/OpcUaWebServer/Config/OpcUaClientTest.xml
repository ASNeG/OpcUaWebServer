<!--
   Copyright 2015 Kai Huebl (kai@huebl-sgh.de)

   Lizenziert gemäß Apache Licence Version 2.0 (die „Lizenz“); Nutzung dieser
   Datei nur in Übereinstimmung mit der Lizenz erlaubt.
   Eine Kopie der Lizenz erhalten Sie auf http://www.apache.org/licenses/LICENSE-2.0.

   Sofern nicht gemäß geltendem Recht vorgeschrieben oder schriftlich vereinbart,
   erfolgt die Bereitstellung der im Rahmen der Lizenz verbreiteten Software OHNE
   GEWÄHR ODER VORBEHALTE – ganz gleich, ob ausdrücklich oder stillschweigend.

   Informationen über die jeweiligen Bedingungen für Genehmigungen und Einschränkungen
   im Rahmen der Lizenz finden Sie in der Lizenz.

   Autor: Kai Huebl (kai@huebl-sgh.de)
-->

<?xml version="1.0" encoding="utf-8"?>
<OpcUaClient Name="TestTags" xmlns="http://ASNeG/OpcUaClient.xsd">

	<Endpoint>
	    <!-- 
	      Example 1: Direct connect to server without security
	      
	        <EndpointUrl>opc.tcp://127.0.0.1:8889</EndpointUrl>
	      
	      Example 2: Direct connect to server with security 
	                 A trusted certificat must be exist from partner.
	      
	        <EndpointUrl>opc.tcp://127.0.0.1:8889</EndpointUrl>
	        <ApplicationUri>urn:127.0.0.1:ASNeG:ASNeG-Demo</ApplicationUri>
	        <SecurityPolicyUri>http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15</SecurityPolicyUri>
	        <MessageSecurityMode>SignAndEncrypt</MessageSecurityMode>
	        
	      Example 3: Indirect get endpoint connect without security
	      
	        <DiscoveryUrl>opc.tcp://127.0.0.1:8889</DiscoveryUrl>
	        
	      Example 4: Indirect get endpoint connect with security
	                 The certificates are exchanged between opc ua client and 
	                 opc ua server. The certificates must then be trusted.
	      
	        <DiscoveryUrl>opc.tcp://127.0.0.1:8889</DiscoveryUrl>
	        <SecurityPolicyUri>http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15</SecurityPolicyUri>
	        <MessageSecurityMode>SignAndEncrypt</MessageSecurityMode>
	      
	    -->
	   
	    <DiscoveryUrl>opc.tcp://127.0.0.1:8889</DiscoveryUrl>
	    
	    <!--
	    <Authentication>
	        <TokenType>UserName</TokenType>
	        <PolicyId>OpcUaStack6</PolicyId>
	        <UserName>user1</UserName>
	        <Password>password1</Password>
	        <SecurityPolicyUri>http://opcfoundation.org/UA/SecurityPolicy#None</SecurityPolicyUri>
	    </Authentication>
	    -->
	    
	</Endpoint>
	
	<NamespaceUri>
		<Uri>http://ASNeG-Demo.de/Test-Server/</Uri>
		<Uri>http://ASNeG-Demo.de/HistoricalAccess/</Uri>
	</NamespaceUri>
	
	<NodeList>
		<Node ValueName="DoubleValue" NodeId="ns=2;i=2255" NodeType="Double">
		</Node>
	    <Node ValueName="TimerIntervalTest" NodeId="ns=1;i=3" NodeType="UInt32">
	    	<MetaData>
				<DisplayName>TimerInterval</DisplayName>
			</MetaData>
		</Node>
	    <Node ValueName="BooleanTest" NodeId="ns=1;i=220" NodeType="Boolean">
			<MetaData>
				<DisplayName>Switch</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>1</Max>
			    </Limits>
			</MetaData>
		</Node>
		<Node ValueName="BooleanArrayTest" NodeId="ns=1;i=221" NodeType="Boolean" Array="1"/>
		<Node ValueName="Int16Test" NodeId="ns=1;i=204" NodeType="Int16">
			<MetaData>
				<DisplayName>Temperatur</DisplayName>
				<Limits>
			    	<Min>-50</Min>
			    	<Max>100</Max>
			    </Limits>
			    <Info>
			    	<Header>Temperatur</Header>
			    	<Unit>C</Unit>
			    	<Detail></Detail>
			    </Info>
			    <Section>
			    	<Low>
			    		<Min>-50</Min>
			    		<Max>0</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>0</Min>
			    		<Max>35</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>35</Min>
			    		<Max>100</Max>
			    		<Color>YELLOW</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>50</Start>
			    	<End>100</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>50</Threshold>
			</MetaData>
		</Node>
		<Node ValueName="Int16ArrayTest" NodeId="ns=1;i=205" NodeType="Int16" Array="1"/> 
		<Node ValueName="UInt16Test" NodeId="ns=1;i=206" NodeType="UInt16">
	    	<MetaData>
				<DisplayName>Niederschlagsmenge</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>100</Max>
			    </Limits>
			    <Info>
			    	<Header>Niederschlag</Header>
			    	<Unit>%</Unit>
			    	<Detail></Detail>
			    </Info>
			    <Section>
			    	<Low>
			    		<Min>0</Min>
			    		<Max>5</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>10</Min>
			    		<Max>20</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>80</Min>
			    		<Max>100</Max>
			    		<Color>YELLOW</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>80</Start>
			    	<End>100</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>80</Threshold>
			</MetaData>
		</Node>
	    <Node ValueName="UInt16ArrayTest" NodeId="ns=1;i=207" NodeType="UInt16" Array="1"/> 
		<Node ValueName="Int32Test" NodeId="ns=1;i=208" NodeType="Int32">
	    	<MetaData>
				<DisplayName>Wind</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>360</Max>
			    </Limits>
			    <Info>
			    	<Header>Wind</Header>
			    	<Unit>km/h</Unit>
			    	<Detail>old </Detail>
			    </Info>
			    <Section>
			    	<Low>
			    		<Min>0</Min>
			    		<Max>20</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>20</Min>
			    		<Max>100</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>100</Min>
			    		<Max>360</Max>
			    		<Color>RED</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>100</Start>
			    	<End>400</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>80</Threshold>
			</MetaData>
		</Node>
	    <Node ValueName="Int32ArrayTest" NodeId="ns=1;i=209" NodeType="Int32" Array="1"/>
		<Node ValueName="UInt32Test" NodeId="ns=1;i=210" NodeType="UInt32">
			<MetaData>
				<DisplayName>UInt32</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>360</Max>
			    </Limits>
			</MetaData>
		</Node>
	    <Node ValueName="UInt32ArrayTest" NodeId="ns=1;i=211" NodeType="UInt32" Array="1"/>
		<Node ValueName="Int64Test" NodeId="ns=1;i=212" NodeType="Int64">
			<MetaData>
				<DisplayName>Int64</DisplayName>
				<Limits>
			    	<Min>-1000</Min>
			    	<Max>1000</Max>
			    </Limits>
			    <Info>
			    	<Header>Header</Header>
			    	<Unit>Unit</Unit>
			    	<Detail>Detail</Detail>
			    </Info>
			    <Section>
			    	<Low>
			    		<Min>-1000</Min>
			    		<Max>-500</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>-250</Min>
			    		<Max>250</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>500</Min>
			    		<Max>1000</Max>
			    		<Color>RED</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>500</Start>
			    	<End>1000</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>500</Threshold>
			</MetaData>
		</Node>
		<Node ValueName="Int64ArrayTest" NodeId="ns=1;i=213" NodeType="Int64" Array="1"/>
		<Node ValueName="UInt64Test" NodeId="ns=1;i=214" NodeType="UInt64">
			<MetaData>
				<DisplayName>UInt64</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>3000</Max>
			    </Limits>
			    <Info>
			    	<Header>Header</Header>
			    	<Unit>Unit</Unit>
			    	<Detail>Detail</Detail>
			    </Info>
			    <Section>
			    	<Low>
			    		<Min>0</Min>
			    		<Max>500</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>500</Min>
			    		<Max>1000</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>2000</Min>
			    		<Max>3000</Max>
			    		<Color>RED</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>2000</Start>
			    	<End>3000</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>2000</Threshold>
			</MetaData>
		</Node>
		<Node ValueName="UInt64ArrayTest" NodeId="ns=1;i=215" NodeType="UInt64" Array="1"/>
		<Node ValueName="FloatTest" NodeId="ns=1;i=216" NodeType="Float">
			<MetaData>
				<DisplayName>Float</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>1000</Max>
			    </Limits>
			    <Info>
			    	<Header>Header</Header>
			    	<Unit>Unit</Unit>
			    	<Detail>Detail</Detail>
			    </Info>
			    <Section>
			    	<Low>
			    		<Min>0</Min>
			    		<Max>250</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>250</Min>
			    		<Max>750</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>750</Min>
			    		<Max>1000</Max>
			    		<Color>RED</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>750</Start>
			    	<End>1000</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>750</Threshold>
			</MetaData>
		</Node>
		<Node ValueName="FloatArrayTest" NodeId="ns=1;i=217" NodeType="Float" Array="1"/>
		<Node ValueName="DoubleTest" NodeId="ns=1;i=218" NodeType="Double">
			<MetaData>
				<DisplayName>Double</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>1000</Max>
			    </Limits>
			    <Info>
			    	<Header>Header</Header>
			    	<Unit>Unit</Unit>
			    	<Detail>Detail</Detail>
			    </Info>
			    <Section>
			    	<Low>
			    		<Min>0</Min>
			    		<Max>250</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>250</Min>
			    		<Max>750</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>750</Min>
			    		<Max>1000</Max>
			    		<Color>RED</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>750</Start>
			    	<End>1000</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>750</Threshold>
			</MetaData>
		</Node>
		<Node ValueName="DoubleArrayTest" NodeId="ns=1;i=219" NodeType="Double" Array="1"/>
		<Node ValueName="SByteTest" NodeId="ns=1;i=200" NodeType="SByte">
			<MetaData>
				<DisplayName>SByte</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="SByteArrayTest" NodeId="ns=1;i=201" NodeType="SByte" Array="1"/>
		<Node ValueName="ByteTest" NodeId="ns=1;i=202" NodeType="Byte">
			<MetaData>
				<DisplayName>Byte</DisplayName>
				<Limits>
			    	<Min>0</Min>
			    	<Max>64</Max>
			    </Limits>
			    <Section>
			    	<Low>
			    		<Min>0</Min>
			    		<Max>20</Max>
			    		<Color>BLUE</Color>
			    	</Low>
			    	<Normal>
			    		<Min>20</Min>
			    		<Max>40</Max>
			    		<Color>GREEN</Color>
			    	</Normal>
			    	<High>
			    		<Min>40</Min>
			    		<Max>64</Max>
			    		<Color>RED</Color>
			    	</High>
			    </Section>
			    <ValGrad>
			    	<Low>BLUE</Low>
			    	<Medium>TEAL</Medium>
			    	<Normal>GREEN</Normal>
			    	<High>RED</High>
			    </ValGrad>
			    <Area>
			    	<Start>40</Start>
			    	<End>64</End>
			    	<Color>RED</Color>
			    </Area>
			    <Threshold>40</Threshold>
			</MetaData>
		</Node>
		<Node ValueName="ByteArrayTest" NodeId="ns=1;i=203" NodeType="Byte" Array="1"/>
		<Node ValueName="StringTest" NodeId="ns=1;i=222" NodeType="String">
			<MetaData>
				<DisplayName>String</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="StringArrayTest" NodeId="ns=1;i=223" NodeType="String" Array="1"/>	
		<Node ValueName="ByteStringTest" NodeId="ns=1;i=224" NodeType="ByteString">
			<MetaData>
				<DisplayName>ByteString</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="ByteStringArrayTest" NodeId="ns=1;i=225" NodeType="ByteString" Array="1"/>
		<Node ValueName="LocalizedTextTest" NodeId="ns=1;i=226" NodeType="LocalizedText">
			<MetaData>
				<DisplayName>LocalizedText</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="LocalizedTextArrayTest" NodeId="ns=1;i=227" NodeType="LocalizedText" Array="1"/>
		<Node ValueName="DateTimeTest" NodeId="ns=1;i=228" NodeType="DateTime">
			<MetaData>
				<DisplayName>DateTime</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="DateTimeArrayTest" NodeId="ns=1;i=229" NodeType="DateTime" Array="1"/>
		<Node ValueName="GuidTest" NodeId="ns=1;i=230" NodeType="Guid">
			<MetaData>
				<DisplayName>Guid</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="GuidArrayTest" NodeId="ns=1;i=231" NodeType="Guid" Array="1"/>
		<Node ValueName="NodeIdTest" NodeId="ns=1;i=232" NodeType="NodeId">
			<MetaData>
				<DisplayName>NodeId</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="NodeIdArrayTest" NodeId="ns=1;i=233" NodeType="NodeId" Array="1"/>
		<Node ValueName="QualifiedNameTest" NodeId="ns=1;i=234" NodeType="QualifiedName">
			<MetaData>
				<DisplayName>QualifiedName</DisplayName>
			</MetaData>
		</Node>
		<Node ValueName="QualifiedNameArrayTest" NodeId="ns=1;i=235" NodeType="QualifiedName" Array="1"/> 
	</NodeList>

</OpcUaClient>
